/* the props */
@import url("@spectrum-css/tokens/dist/css/index.css");
@import url("@spectrum-css/typography");
@import url("@spectrum-css/icon");
@import url("@spectrum-css/link");
@import url("@spectrum-css/treeview");
@import url("@spectrum-css/splitview");
@import url("@spectrum-css/divider");

:root {
  --brand: var(--spectrum-cyan-800);
  --text-1: var(--spectrum-cyan-1200);
  --text-2: var(--spectrum-cyan-400);
  --text-3: var(--spectrum-cyan-800);
  --surface-1: var(--spectrum-gray-300);
  --surface-2: var(--spectrum-gray-500);
  --surface-3: var(--spectrum-gray-700);
  --surface-4: var(--spectrum-gray-900);
  --github-green: #08872b;

  /* Spectrum normally uses fixed pixel based sizing.  This lets me use relative sizing */

  /* idea taken from open-props */
  --size-000: -0.5rem;
  --size-00: -0.25rem;
  --size-1: 0.25rem;
  --size-2: 0.5rem;
  --size-3: 1rem;
  --size-4: 1.25rem;
  --size-5: 1.5rem;
  --size-6: 1.75rem;
  --size-7: 2rem;
  --size-8: 3rem;
  --size-9: 4rem;
  --size-10: 5rem;
  --size-11: 7.5rem;
  --size-12: 10rem;
  --size-13: 15rem;
  --size-14: 20rem;
  --size-15: 30rem;
  --header-height: 7vh;
  --main-height: 88vh;
  --footer-height: 5vh;
  --logo-vertical-margin: 2px;

  /* customize the spectrum-css tokens */
  --mod-button-background-color-default: var(--text-1);
  --mod-button-content-color-default: var(--text-3);
  --mod-divider-background-color: var(--text-1);
  --mod-body-font-color: var(--text-1);
  --mod-splitview-content-color: var(--text-1);
  --mod-heading-font-color: var(--text-1);
  --mod-splitview-background-color: var(--surface-1);
  --mod-table-header-background-color-scrollable: var(--text-1);
  --mod-table-header-background-color: var(--text-1);
  /* stylelint-disable-next-line custom-property-pattern */
  --mod-table-header-background-color--quiet: var(--text-1);
  --mod-table-header-text-color: var(--text-2);
  /* stylelint-disable-next-line custom-property-pattern */
  --mod-table-row-background-color--quiet: var(--surface-1);
  --mod-table-row-background-color-hover: var(--surface-3);
  --mod-table-row-background-color: var(--surface-1);
  --mod-table-row-text-color: var(--text-1);
  --mod-button-border-color-default: var(--surface-2);
}

html {
  min-width: 100vw;
  height: 100vh;
  box-sizing: border-box;
}

body {
  margin: 0;
  color: var(--text-1);
  background-color: var(--spectrum-background-base-color);
  display: grid;
  grid-template-areas:
    "header"
    "content"
    "footer";
  grid-template-rows: var(--header-height) 1fr var(--footer-height);
  height: 100vh;
}

/* 2. Optional sidebar layout */
body.with-sidebar {
  display: grid;
  grid-template:
    "header" var(--header-height)
    "title" var(--header-height)
    "content" 1fr
    "footer" var(--footer-height);
}

/* 3. Layout regions */
header {
  box-sizing: border-box;
  grid-area: header;
  width: 100vw;
  height: var(--header-height);
}

div.title-section {
  display: flex;
  justify-content: center;
  align-items: baseline;
  grid-area: title;

  & h1 {
    margin: var(--size-5);
  }
}

footer {
  grid-area: footer;
  height: var(--footer-height);
  width: 100%;
}

div.spectrum-SplitView.spectrum-SplitView--horizontal {
  grid-area: content;
  height: var(--main-height);
  width: 100vw;
}

main,
div#main {
  grid-area: content;
  overflow-y: auto;
  padding: 0 1rem;
  min-height: var(--main-height);
  box-sizing: border-box;
}

/* 4. Sidebar */
div#nav {
  grid-area: content;
  max-width: max(250px, 20vw);
  overflow-y: auto;
  padding: 0.5rem;
}

/* 5. SplitView pane (used in legacy layout maybe?) */
div.spectrum-SplitView-pane {
  height: var(--main-height);
  width: 100vw;
  overflow: auto;
  box-sizing: border-box;
}

/* 6. Article content */
article {
  box-sizing: border-box;
  height: fit-content;
  margin: 8px;
}

h5,
h6,
small,
dd {
  color: var(--text-3);
}

div.note {
  padding: 0 3rem;

  --mod-body-font-color: var(--spectrum-green-800);
}
